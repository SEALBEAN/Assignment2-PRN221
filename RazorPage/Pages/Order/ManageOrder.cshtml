@page
@model RazorPage.Pages.Order.ManageOrderModel
@using BusinessObject;
@using Microsoft.AspNetCore.Http;
@using Repository;
@using System.Globalization;

@{
    var role = HttpContext.Session.GetString("role");
    var name = HttpContext.Session.GetString("name");

    IOrderRepository  _orderRepository = new OrderRepository();
    var orders = _orderRepository.GetOrders();
}
<script>
    function confirmDelete() {
        var result = confirm("Are you sure you want to delete this order?");
        if (result) {
            return true;
        }
        else {
            return false;
        }
    }
</script>

@{

    @if (role == "admin")
    {
        <h1>Manage Orders</h1>
        <p>Welcome, Admin @name!</p>
        <a href="/MainPage" class="btn btn-primary">Back to MainPage</a>

        <table class="table">
            <thead>
                <tr>
                    <th>Order ID</th>
                    <th>Customer ID</th>
                    <th>Order Date</th>
                    <th>Shipped Date</th>
                    <th>Total</th>
                    <th>Order Status</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var order in orders)
                {
                    <tr>
                        <td>@order.OrderId</td>
                        @{
                            string customerName = "";
                            //get category name by category id using category repository
                            ICustomerRepository _customerRepository = new CustomerRepository();
                            var customer = _customerRepository.GetCustomers().Where(x => x.CustomerId == order.CustomerId).FirstOrDefault();
                            customerName = customer.CustomerName;
                        }
                        <td>@customerName</td>
                        @{
                            string inputDate = order.OrderDate.ToString();
                            string orderDate = "";
                            if (inputDate != "")
                            {
                                DateTime parsedDate = DateTime.ParseExact(inputDate, "M/d/yyyy h:mm:ss tt", CultureInfo.InvariantCulture);
                                orderDate = parsedDate.ToString("MM-dd-yyyy");
                            }
                        }
                        <td>@orderDate</td>
                        @{
                            inputDate = order.ShippedDate.ToString();
                            string shipDate = "";
                            if (inputDate != "")
                            {
                                DateTime parsedDate = DateTime.ParseExact(inputDate, "M/d/yyyy h:mm:ss tt", CultureInfo.InvariantCulture);
                                shipDate = parsedDate.ToString("MM-dd-yyyy");
                            }
                        }
                        <td>@shipDate</td>
                        <td>@order.Total</td>
                        <td>@order.OrderStatus</td>
                        <td>
                            <form method="post" asp-page-handler="UpdateOrder">
                                <input type="hidden" name="OrderId" value="@order.OrderId" />
                                <button type="submit" class="btn btn-primary">Update</button>
                            </form>
                            <form method="post" asp-page-handler="DeleteOrder" onsubmit="return confirmDelete()">
                                <input type="hidden" name="OrderId" value="@order.OrderId" />
                                <button type="submit" class="btn btn-danger">Delete</button>
                            </form>
                        </td>
                    </tr>
                }
            </tbody>


        </table>

    }
    else
    {
        <h1>Access Denied</h1>
        <p>This page is restricted to administrators only. Please log in as an admin to access this page.</p>
        <a href="/login" class="btn btn-primary">Go to Login</a>
    }


}